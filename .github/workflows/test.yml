name: Test

on:
  push:
    paths-ignore:
      - 'docs/**'
    branches:
      - main
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
    types: [opened, synchronize]

  # Allows workflows to be manually triggered
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  code-quality:
    name: code-quality
    runs-on: ubuntu-latest
    steps:
      - name: repository checkout step
        uses: actions/checkout@v4

      - name: python environment step
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: install pre-commit
        run: python3 -m pip install pre-commit

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | tr '\n' ' ')
          echo "CHANGED_FILES=${CHANGED_FILES}" >> $GITHUB_ENV

      - name: Print changed files
        run: |
          echo "Changed files: $CHANGED_FILES"

      - name: Run pre-commit on changed files
        run: |
          if [ -n "$CHANGED_FILES" ]; then
            pre-commit run --color always --files $CHANGED_FILES --show-diff-on-failure
          else
            echo "No changed files to check."
          fi

  run-tests-no-extras:
    needs: code-quality
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - run: git remote set-branches origin 'main'

      - run: git fetch --depth 1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install package and dependencies
        run: |
          python -m pip install .[dev] --no-cache-dir

      - name: Show dependencies
        run: python -m pip list

      - name: Show available branches
        run: git branch -a

      - name: Run tests
        run: |
          python -m pytest pyaptamer -p no:warnings
